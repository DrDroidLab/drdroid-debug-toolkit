"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Gcm(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TaskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Gcm._TaskType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Gcm._TaskType.ValueType  # 0
        MQL_EXECUTION: Gcm._TaskType.ValueType  # 1
        FILTER_LOG_EVENTS: Gcm._TaskType.ValueType  # 2
        DASHBOARD_VIEW: Gcm._TaskType.ValueType  # 3
        SHEETS_DATA_FETCH: Gcm._TaskType.ValueType  # 4
        CLOUD_RUN_SERVICE_DASHBOARD: Gcm._TaskType.ValueType  # 5

    class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper): ...
    UNKNOWN: Gcm.TaskType.ValueType  # 0
    MQL_EXECUTION: Gcm.TaskType.ValueType  # 1
    FILTER_LOG_EVENTS: Gcm.TaskType.ValueType  # 2
    DASHBOARD_VIEW: Gcm.TaskType.ValueType  # 3
    SHEETS_DATA_FETCH: Gcm.TaskType.ValueType  # 4
    CLOUD_RUN_SERVICE_DASHBOARD: Gcm.TaskType.ValueType  # 5

    @typing_extensions.final
    class MqlExecution(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        QUERY_FIELD_NUMBER: builtins.int
        TIMESERIES_OFFSETS_FIELD_NUMBER: builtins.int
        INTERVAL_FIELD_NUMBER: builtins.int
        @property
        def query(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def timeseries_offsets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def interval(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            query: google.protobuf.wrappers_pb2.StringValue | None = ...,
            timeseries_offsets: collections.abc.Iterable[builtins.int] | None = ...,
            interval: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["interval", b"interval", "query", b"query"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["interval", b"interval", "query", b"query", "timeseries_offsets", b"timeseries_offsets"]) -> None: ...

    @typing_extensions.final
    class DashboardView(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DASHBOARD_ID_FIELD_NUMBER: builtins.int
        WIDGET_NAME_FIELD_NUMBER: builtins.int
        INTERVAL_FIELD_NUMBER: builtins.int
        @property
        def dashboard_id(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def widget_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def interval(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            dashboard_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
            widget_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
            interval: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["dashboard_id", b"dashboard_id", "interval", b"interval", "widget_name", b"widget_name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dashboard_id", b"dashboard_id", "interval", b"interval", "widget_name", b"widget_name"]) -> None: ...

    @typing_extensions.final
    class FilterLogEvents(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        FILTER_QUERY_FIELD_NUMBER: builtins.int
        RESOURCE_NAMES_FIELD_NUMBER: builtins.int
        ORDER_BY_FIELD_NUMBER: builtins.int
        PAGE_SIZE_FIELD_NUMBER: builtins.int
        PAGE_TOKEN_FIELD_NUMBER: builtins.int
        @property
        def filter_query(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def resource_names(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.wrappers_pb2.StringValue]: ...
        @property
        def order_by(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def page_size(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
        @property
        def page_token(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            filter_query: google.protobuf.wrappers_pb2.StringValue | None = ...,
            resource_names: collections.abc.Iterable[google.protobuf.wrappers_pb2.StringValue] | None = ...,
            order_by: google.protobuf.wrappers_pb2.StringValue | None = ...,
            page_size: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
            page_token: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["filter_query", b"filter_query", "order_by", b"order_by", "page_size", b"page_size", "page_token", b"page_token"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter_query", b"filter_query", "order_by", b"order_by", "page_size", b"page_size", "page_token", b"page_token", "resource_names", b"resource_names"]) -> None: ...

    @typing_extensions.final
    class SheetsDataFetch(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SPREADSHEET_NAME_FIELD_NUMBER: builtins.int
        SHEET_NAME_FIELD_NUMBER: builtins.int
        MAX_ROWS_FIELD_NUMBER: builtins.int
        OUTPUT_FORMAT_FIELD_NUMBER: builtins.int
        @property
        def spreadsheet_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def sheet_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def max_rows(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
        @property
        def output_format(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            spreadsheet_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
            sheet_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
            max_rows: google.protobuf.wrappers_pb2.Int64Value | None = ...,
            output_format: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["max_rows", b"max_rows", "output_format", b"output_format", "sheet_name", b"sheet_name", "spreadsheet_name", b"spreadsheet_name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["max_rows", b"max_rows", "output_format", b"output_format", "sheet_name", b"sheet_name", "spreadsheet_name", b"spreadsheet_name"]) -> None: ...

    @typing_extensions.final
    class CloudRunServiceDashboard(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SERVICE_NAME_FIELD_NUMBER: builtins.int
        REGION_FIELD_NUMBER: builtins.int
        WIDGET_NAME_FIELD_NUMBER: builtins.int
        @property
        def service_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def region(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def widget_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            service_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
            region: google.protobuf.wrappers_pb2.StringValue | None = ...,
            widget_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["region", b"region", "service_name", b"service_name", "widget_name", b"widget_name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["region", b"region", "service_name", b"service_name", "widget_name", b"widget_name"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    MQL_EXECUTION_FIELD_NUMBER: builtins.int
    FILTER_LOG_EVENTS_FIELD_NUMBER: builtins.int
    DASHBOARD_VIEW_FIELD_NUMBER: builtins.int
    SHEETS_DATA_FETCH_FIELD_NUMBER: builtins.int
    CLOUD_RUN_SERVICE_DASHBOARD_FIELD_NUMBER: builtins.int
    type: global___Gcm.TaskType.ValueType
    @property
    def mql_execution(self) -> global___Gcm.MqlExecution: ...
    @property
    def filter_log_events(self) -> global___Gcm.FilterLogEvents: ...
    @property
    def dashboard_view(self) -> global___Gcm.DashboardView: ...
    @property
    def sheets_data_fetch(self) -> global___Gcm.SheetsDataFetch: ...
    @property
    def cloud_run_service_dashboard(self) -> global___Gcm.CloudRunServiceDashboard: ...
    def __init__(
        self,
        *,
        type: global___Gcm.TaskType.ValueType = ...,
        mql_execution: global___Gcm.MqlExecution | None = ...,
        filter_log_events: global___Gcm.FilterLogEvents | None = ...,
        dashboard_view: global___Gcm.DashboardView | None = ...,
        sheets_data_fetch: global___Gcm.SheetsDataFetch | None = ...,
        cloud_run_service_dashboard: global___Gcm.CloudRunServiceDashboard | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_run_service_dashboard", b"cloud_run_service_dashboard", "dashboard_view", b"dashboard_view", "filter_log_events", b"filter_log_events", "mql_execution", b"mql_execution", "sheets_data_fetch", b"sheets_data_fetch", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_run_service_dashboard", b"cloud_run_service_dashboard", "dashboard_view", b"dashboard_view", "filter_log_events", b"filter_log_events", "mql_execution", b"mql_execution", "sheets_data_fetch", b"sheets_data_fetch", "task", b"task", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["task", b"task"]) -> typing_extensions.Literal["mql_execution", "filter_log_events", "dashboard_view", "sheets_data_fetch", "cloud_run_service_dashboard"] | None: ...

global___Gcm = Gcm
