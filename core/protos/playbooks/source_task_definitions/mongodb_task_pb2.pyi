"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class MongoDB(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TaskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[MongoDB._TaskType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: MongoDB._TaskType.ValueType  # 0
        DATA_FETCH: MongoDB._TaskType.ValueType  # 1

    class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper): ...
    UNKNOWN: MongoDB.TaskType.ValueType  # 0
    DATA_FETCH: MongoDB.TaskType.ValueType  # 1

    @typing_extensions.final
    class MongoQuery(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DATABASE_FIELD_NUMBER: builtins.int
        COLLECTION_FIELD_NUMBER: builtins.int
        ORDER_BY_FIELD_FIELD_NUMBER: builtins.int
        LIMIT_FIELD_NUMBER: builtins.int
        FILTERS_FIELD_NUMBER: builtins.int
        PROJECTION_FIELD_NUMBER: builtins.int
        TIMEOUT_FIELD_NUMBER: builtins.int
        @property
        def database(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def collection(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def order_by_field(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def limit(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
        @property
        def filters(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def projection(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def timeout(self) -> google.protobuf.wrappers_pb2.UInt64Value: ...
        def __init__(
            self,
            *,
            database: google.protobuf.wrappers_pb2.StringValue | None = ...,
            collection: google.protobuf.wrappers_pb2.StringValue | None = ...,
            order_by_field: google.protobuf.wrappers_pb2.StringValue | None = ...,
            limit: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
            filters: google.protobuf.wrappers_pb2.StringValue | None = ...,
            projection: google.protobuf.wrappers_pb2.StringValue | None = ...,
            timeout: google.protobuf.wrappers_pb2.UInt64Value | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["collection", b"collection", "database", b"database", "filters", b"filters", "limit", b"limit", "order_by_field", b"order_by_field", "projection", b"projection", "timeout", b"timeout"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["collection", b"collection", "database", b"database", "filters", b"filters", "limit", b"limit", "order_by_field", b"order_by_field", "projection", b"projection", "timeout", b"timeout"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    DATA_FETCH_FIELD_NUMBER: builtins.int
    type: global___MongoDB.TaskType.ValueType
    @property
    def data_fetch(self) -> global___MongoDB.MongoQuery: ...
    def __init__(
        self,
        *,
        type: global___MongoDB.TaskType.ValueType = ...,
        data_fetch: global___MongoDB.MongoQuery | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_fetch", b"data_fetch", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_fetch", b"data_fetch", "task", b"task", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["task", b"task"]) -> typing_extensions.Literal["data_fetch"] | None: ...

global___MongoDB = MongoDB
