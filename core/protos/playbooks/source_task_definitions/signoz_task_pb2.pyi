"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Signoz(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TaskType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Signoz._TaskType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Signoz._TaskType.ValueType  # 0
        CLICKHOUSE_QUERY: Signoz._TaskType.ValueType  # 1
        BUILDER_QUERY: Signoz._TaskType.ValueType  # 2
        DASHBOARD_DATA: Signoz._TaskType.ValueType  # 3

    class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper): ...
    UNKNOWN: Signoz.TaskType.ValueType  # 0
    CLICKHOUSE_QUERY: Signoz.TaskType.ValueType  # 1
    BUILDER_QUERY: Signoz.TaskType.ValueType  # 2
    DASHBOARD_DATA: Signoz.TaskType.ValueType  # 3

    @typing_extensions.final
    class ClickhouseQueryTask(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        QUERY_FIELD_NUMBER: builtins.int
        STEP_FIELD_NUMBER: builtins.int
        FILL_GAPS_FIELD_NUMBER: builtins.int
        PANEL_TYPE_FIELD_NUMBER: builtins.int
        @property
        def query(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def step(self) -> google.protobuf.wrappers_pb2.Int32Value: ...
        @property
        def fill_gaps(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
        @property
        def panel_type(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            query: google.protobuf.wrappers_pb2.StringValue | None = ...,
            step: google.protobuf.wrappers_pb2.Int32Value | None = ...,
            fill_gaps: google.protobuf.wrappers_pb2.BoolValue | None = ...,
            panel_type: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["fill_gaps", b"fill_gaps", "panel_type", b"panel_type", "query", b"query", "step", b"step"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["fill_gaps", b"fill_gaps", "panel_type", b"panel_type", "query", b"query", "step", b"step"]) -> None: ...

    @typing_extensions.final
    class BuilderQueryTask(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        BUILDER_QUERIES_FIELD_NUMBER: builtins.int
        STEP_FIELD_NUMBER: builtins.int
        PANEL_TYPE_FIELD_NUMBER: builtins.int
        @property
        def builder_queries(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def step(self) -> google.protobuf.wrappers_pb2.Int32Value: ...
        @property
        def panel_type(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            builder_queries: google.protobuf.wrappers_pb2.StringValue | None = ...,
            step: google.protobuf.wrappers_pb2.Int32Value | None = ...,
            panel_type: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["builder_queries", b"builder_queries", "panel_type", b"panel_type", "step", b"step"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["builder_queries", b"builder_queries", "panel_type", b"panel_type", "step", b"step"]) -> None: ...

    @typing_extensions.final
    class DashboardDataTask(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DASHBOARD_NAME_FIELD_NUMBER: builtins.int
        STEP_FIELD_NUMBER: builtins.int
        PANEL_TYPE_FIELD_NUMBER: builtins.int
        VARIABLES_JSON_FIELD_NUMBER: builtins.int
        @property
        def dashboard_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def step(self) -> google.protobuf.wrappers_pb2.Int32Value: ...
        @property
        def panel_type(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        @property
        def variables_json(self) -> google.protobuf.wrappers_pb2.StringValue: ...
        def __init__(
            self,
            *,
            dashboard_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
            step: google.protobuf.wrappers_pb2.Int32Value | None = ...,
            panel_type: google.protobuf.wrappers_pb2.StringValue | None = ...,
            variables_json: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["dashboard_name", b"dashboard_name", "panel_type", b"panel_type", "step", b"step", "variables_json", b"variables_json"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dashboard_name", b"dashboard_name", "panel_type", b"panel_type", "step", b"step", "variables_json", b"variables_json"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    CLICKHOUSE_QUERY_FIELD_NUMBER: builtins.int
    BUILDER_QUERY_FIELD_NUMBER: builtins.int
    DASHBOARD_DATA_FIELD_NUMBER: builtins.int
    type: global___Signoz.TaskType.ValueType
    @property
    def clickhouse_query(self) -> global___Signoz.ClickhouseQueryTask: ...
    @property
    def builder_query(self) -> global___Signoz.BuilderQueryTask: ...
    @property
    def dashboard_data(self) -> global___Signoz.DashboardDataTask: ...
    def __init__(
        self,
        *,
        type: global___Signoz.TaskType.ValueType = ...,
        clickhouse_query: global___Signoz.ClickhouseQueryTask | None = ...,
        builder_query: global___Signoz.BuilderQueryTask | None = ...,
        dashboard_data: global___Signoz.DashboardDataTask | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["builder_query", b"builder_query", "clickhouse_query", b"clickhouse_query", "dashboard_data", b"dashboard_data", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["builder_query", b"builder_query", "clickhouse_query", b"clickhouse_query", "dashboard_data", b"dashboard_data", "task", b"task", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["task", b"task"]) -> typing_extensions.Literal["clickhouse_query", "builder_query", "dashboard_data"] | None: ...

global___Signoz = Signoz
