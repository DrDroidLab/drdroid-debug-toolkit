syntax = "proto3";
package protos.playbooks;

import "google/protobuf/wrappers.proto";
import "google/protobuf/struct.proto";


message Datadog {
  message ServiceMetricExecutionTask {
    google.protobuf.StringValue service_name = 1;
    google.protobuf.StringValue environment_name = 2;
    google.protobuf.StringValue metric_family = 3;
    google.protobuf.StringValue metric = 4;
    repeated uint32 timeseries_offsets = 5;
    google.protobuf.UInt64Value interval = 6;
  }

  message QueryMetricExecutionTask {
    repeated string queries = 1;
    google.protobuf.StringValue formula = 2;
    repeated uint32 timeseries_offsets = 3;
    uint32 interval = 4;
  }

  message QueryDashboardWidgetMetricTask {
    google.protobuf.StringValue response_type = 1;
    repeated google.protobuf.Struct queries = 2;
    repeated google.protobuf.Struct formulas = 3;
    google.protobuf.StringValue dashboard = 4;
    google.protobuf.StringValue widget_id = 5;
    google.protobuf.StringValue widget_title = 6;
    google.protobuf.StringValue widget_type = 7;
  }

  message LogQueryExecutionTask {
    google.protobuf.StringValue query = 1;
  }

  message LogCountByServiceExecutionTask {
    google.protobuf.StringValue query = 1;
  }

  message DashboardMultipleWidgetsTask {
    google.protobuf.StringValue dashboard_name = 1;
    google.protobuf.StringValue widget_id = 2;
    google.protobuf.StringValue unit = 3;
    repeated uint32 timeseries_offsets = 4;
    google.protobuf.UInt64Value interval = 5;
    google.protobuf.StringValue template_variables = 6;
  }

  message APMQuery {
    google.protobuf.StringValue service_name = 1;
    google.protobuf.UInt64Value interval = 2;
  }

  enum TaskType {
    UNKNOWN = 0;
    SERVICE_METRIC_EXECUTION = 1;
    QUERY_METRIC_EXECUTION = 2;
    LOG_QUERY_EXECUTION = 3;
    QUERY_DASHBOARD_WIDGET_METRIC = 4;
    LOG_COUNT_BY_SERVICE_EXECUTION = 5;
    DASHBOARD_MULTIPLE_WIDGETS = 6;
    APM_QUERY = 7;
  }

  TaskType type = 1;
  oneof task {
    ServiceMetricExecutionTask service_metric_execution = 2;
    QueryMetricExecutionTask query_metric_execution = 3;
    LogQueryExecutionTask log_query_execution = 4;
    QueryDashboardWidgetMetricTask query_dashboard_widget_metric = 5;
    LogCountByServiceExecutionTask log_count_by_service_execution = 6;
    DashboardMultipleWidgetsTask dashboard_multiple_widgets = 7;
    APMQuery apm_query = 8;
  }
}