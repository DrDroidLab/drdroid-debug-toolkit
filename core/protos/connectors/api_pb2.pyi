"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.wrappers_pb2
import protos.base_pb2
import protos.connectors.connector_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class TestConnectorRequest(google.protobuf.message.Message):
    """///////////////////  Connectors API schema  /////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTOR_FIELD_NUMBER: builtins.int
    @property
    def connector(self) -> protos.connectors.connector_pb2.Connector: ...
    def __init__(
        self,
        *,
        connector: protos.connectors.connector_pb2.Connector | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connector", b"connector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connector", b"connector"]) -> None: ...

global___TestConnectorRequest = TestConnectorRequest

@typing_extensions.final
class TestConnectorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def success(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def message(self) -> protos.base_pb2.Message: ...
    def __init__(
        self,
        *,
        success: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        message: protos.base_pb2.Message | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["message", b"message", "success", b"success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "success", b"success"]) -> None: ...

global___TestConnectorResponse = TestConnectorResponse
